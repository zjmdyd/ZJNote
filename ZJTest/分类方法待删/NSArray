
- (void)resetArrayWithValues:(NSArray *)values;

+ (NSArray *)sexStrings;
+ (NSInteger)sexIndexWithName:(NSString *)name;
+ (NSArray *)hourStrings;
+ (NSArray *)minuteStrings;
+ (NSArray *)nationArray;
+ (NSInteger)nationIndexWithName:(NSString *)name;

#pragma mark - 处理数据

- (BOOL)containNumber:(NSNumber *)obj;
- (BOOL)containString:(NSString *)obj;

/**
 *  获取数组中的最值,元素须为NSNumber类型
 */
- (NSNumber *)maxValue;
- (NSNumber *)minValue;
- (NSNumber *)average;

#pragma mark - 处理数组

/**
 *  多维数组的mutableCopy
 */
- (NSArray *)multiDimensionalArrayMutableCopy;
+ (NSArray *)multiArrayWithTypes:(NSArray *)array;
+ (NSArray *)multiArrayWithTypes:(NSArray *)array value:(id)value;

- (NSString *)joinToStringWithSeparateString:(NSString *)str;
- (NSString *)joinToStringWithSeparateString:(NSString *)str endIndex:(NSInteger)endIndex;

- (NSString *)joinToStringWithSeparateString:(NSString *)str indexs:(NSArray *)indexs beganIdx:(NSInteger)index;

- (BOOL)hasBoolObject;




- (void)resetArrayWithValues:(NSArray *)values {
    for (int i = 0; i < values.count; i++) {
        id value = values[i];
        if ([value isKindOfClass:[NSArray class]]) {
            [self[i] resetArrayWithValues:value];
        }else {
            if ([self isKindOfClass:[NSMutableArray class]]) {
                ((NSMutableArray *)self)[i] = value;
            }
        }
    }
}

+ (NSInteger)sexIndexWithName:(NSString *)name {
    NSArray *sexs = [self sexStrings];
    for (int i = 0; i < sexs.count; i++) {
        NSString *str = sexs[i];
        if ([str isEqualToString:name]) {
            return i;
        }
    }
    
    return 0;
}

+ (NSArray *)sexStrings {
    return @[@"男", @"女"];
}

+ (NSArray *)hourStrings {
    NSMutableArray *ary = [NSMutableArray array];
    for (int i = 0; i < 24; i++) {
        [ary addObject:[NSString stringWithFormat:@"%02d", i]];
    }
    
    return ary;
}

+ (NSArray *)minuteStrings {
    NSMutableArray *ary = [NSMutableArray array];
    for (int i = 0; i < 60; i++) {
        [ary addObject:[NSString stringWithFormat:@"%02d", i]];
    }
    
    return ary;
}

+ (NSInteger)nationIndexWithName:(NSString *)name {
    NSArray *nations = [self nationArray];
    for (NSDictionary *dic in nations) {
        if ([dic[@"value"] isEqualToString:name]) {
            return [dic[@"key"] integerValue];
        }
    }
    
    return 1;
}

+ (NSArray *)nationArray {
    return @[
             @{
                 @"key": @"1", @"value": @"汉族"
                 },
             @{
                 @"key": @"2", @"value": @"蒙古族"
                 },
             @{
                 @"key": @"3", @"value": @"回族"
                 },
             @{
                 @"key": @"4", @"value": @"藏族"
                 },
             @{
                 @"key": @"5", @"value": @"维吾尔族"
                 },
             @{
                 @"key": @"6", @"value": @"苗族"
                 },
             @{
                 @"key": @"7", @"value": @"彝族"
                 },
             @{
                 @"key": @"8", @"value": @"壮族"
                 },
             @{
                 @"key": @"9", @"value": @"布依族"
                 },
             @{
                 @"key": @"10", @"value": @"朝鲜族"
                 },
             @{
                 @"key": @"11", @"value": @"满族"
                 },
             @{
                 @"key": @"12", @"value": @"侗族"
                 },
             @{
                 @"key": @"13", @"value": @"瑶族"
                 },
             @{
                 @"key": @"14", @"value": @"白族"
                 },
             @{
                 @"key": @"15", @"value": @"土家族"
                 },
             @{
                 @"key": @"16", @"value": @"哈尼族"
                 },
             @{
                 @"key": @"17", @"value": @"哈萨克族"
                 },
             @{
                 @"key": @"18", @"value": @"傣族"
                 },
             @{
                 @"key": @"19", @"value": @"黎族"
                 },
             @{
                 @"key": @"20", @"value": @"傈僳族"
                 },
             @{
                 @"key": @"21", @"value": @"佤族"
                 },
             @{
                 @"key": @"22", @"value": @"畲族"
                 },
             @{
                 @"key": @"23", @"value": @"高山族"
                 },
             @{
                 @"key": @"24", @"value": @"拉祜族"
                 },
             @{
                 @"key": @"25", @"value": @"水族"
                 },
             @{
                 @"key": @"26", @"value": @"东乡族"
                 },
             @{
                 @"key": @"27", @"value": @"纳西族"
                 },
             @{
                 @"key": @"28", @"value": @"景颇族"
                 },
             @{
                 @"key": @"29", @"value": @"柯尔克孜族"
                 },
             @{
                 @"key": @"30", @"value": @"土族"
                 },
             @{
                 @"key": @"31", @"value": @"达斡尔族"
                 },
             @{
                 @"key": @"32", @"value": @"仫佬族"
                 },
             @{
                 @"key": @"33", @"value": @"羌族"
                 },
             @{
                 @"key": @"34", @"value": @"布朗族"
                 },
             @{
                 @"key": @"35", @"value": @"撒拉族"
                 },
             @{
                 @"key": @"36", @"value": @"毛难族"
                 },
             @{
                 @"key": @"37", @"value": @"仡佬族"
                 },
             @{
                 @"key": @"38", @"value": @"锡伯族"
                 },
             @{
                 @"key": @"39", @"value": @"阿昌族"
                 },
             @{
                 @"key": @"40", @"value": @"普米族"
                 },
             @{
                 @"key": @"41", @"value": @"塔吉克族"
                 },
             @{
                 @"key": @"42", @"value": @"怒族"
                 },
             @{
                 @"key": @"43", @"value": @"乌孜别克族"
                 },
             @{
                 @"key": @"44", @"value": @"俄罗斯族"
                 },
             @{
                 @"key": @"45", @"value": @"鄂温克族"
                 },
             @{
                 @"key": @"46", @"value": @"崩龙族"
                 },
             @{
                 @"key": @"47", @"value": @"保安族"
                 },
             @{
                 @"key": @"48", @"value": @"裕固族"
                 },
             @{
                 @"key": @"49", @"value": @"京族"
                 },
             @{
                 @"key": @"50", @"value": @"塔塔尔族"
                 },
             @{
                 @"key": @"51", @"value": @"独龙族"
                 },
             @{
                 @"key": @"52", @"value": @"鄂伦春族"
                 },
             @{
                 @"key": @"53", @"value": @"赫哲族"
                 },
             @{
                 @"key": @"54", @"value": @"门巴族"
                 },
             @{
                 @"key": @"55", @"value": @"珞巴族"
                 },
             @{
                 @"key": @"56", @"value": @"基诺族"
                 }
             ];
}

#pragma mark - 处理数据

- (BOOL)containNumber:(NSNumber *)obj {
    for (NSNumber *num in self) {
        if ([obj isEqualToNumber:num]) {
            return YES;
        }
    }
    
    return NO;
}

- (BOOL)containString:(NSString *)obj {
    for (NSString *str in self) {
        if ([obj isEqualToString:str]) {
            return YES;
        }
    }
    
    return NO;
}

- (NSNumber *)maxValue {
    CGFloat max = FLT_MIN;
    for (int i = 0; i < self.count; i++) {
        NSNumber *value = self[i];
        if ([value isKindOfClass:[NSNumber class]]) {
            if (max < value.floatValue) {
                max = value.floatValue;
                break;
            }
        }
    }
    
    return @(max);
}

- (NSNumber *)minValue {
    CGFloat min = FLT_MAX;
    for (int i = 0; i < self.count; i++) {
        NSNumber *value = self[i];
        if ([value isKindOfClass:[NSNumber class]]) {
            if (min > value.floatValue) {
                min = value.floatValue;
                break;
            }
        }
    }
    
    return @(min);
}

- (NSNumber *)average {
    CGFloat sum = 0.0;
    for (int i = 0; i < self.count; i++) {
        NSNumber *value = self[i];
        if ([value isKindOfClass:[NSNumber class]]) {
            sum += value.floatValue;
        }
    }
    
    return @(sum/self.count);
}

#pragma mark - 处理数组

- (NSArray *)multiDimensionalArrayMutableCopy {
    NSMutableArray *array = [NSMutableArray array];
    for (id obj in self) {
        if ([obj isKindOfClass:[NSArray class]]) {
            [array addObject:[obj multiDimensionalArrayMutableCopy]];
        }else {
            [array addObject:[obj mutableCopy]];
        }
    }
    
    return [array mutableCopy];
}

+ (NSArray *)multiArrayWithTypes:(NSArray *)array {
    return [self multiArrayWithTypes:array value:@""];
}

+ (NSArray *)multiArrayWithTypes:(NSArray *)array value:(id)value {
    NSMutableArray *ary = [NSMutableArray array];
    for (int i = 0; i < array.count; i++) {
        NSMutableArray *sAry = [NSMutableArray arrayWithObject:value count:[array[i] count]];
        [ary addObject:sAry];
    }
    
    return ary;
}

- (NSString *)joinToStringWithSeparateString:(NSString *)str {
    return [self joinToStringWithSeparateString:str endIndex:self.count];
}

- (NSString *)joinToStringWithSeparateString:(NSString *)str endIndex:(NSInteger)endIndex {
    if (![self isKindOfClass:[NSArray class]]) return @"";
    
    NSMutableString *string = [NSMutableString string];
    for (int i = 0; i < endIndex; i++) {
        if (i < endIndex - 1) {
            [string appendString:[NSString stringWithFormat:@"%@%@", self[i], str]];
        }else {
            [string appendString:[NSString stringWithFormat:@"%@", self[i]]];
        }
    }
    return string;
}

- (NSString *)joinToStringWithSeparateString:(NSString *)str indexs:(NSArray *)indexs beganIdx:(NSInteger)index {
    if (![self isKindOfClass:[NSArray class]]) return @"";
    
    NSMutableString *string = [NSMutableString string];
    for (int i = 0; i < indexs.count; i++) {
        NSInteger idx = [indexs[i] integerValue];
        if (i < indexs.count - 1) {
            [string appendString:[NSString stringWithFormat:@"%@%@", self[idx-index], str]];
        }else {
            [string appendString:self[idx-index]];
        }
    }
    return string;
}

// 处理布尔值

- (BOOL)hasBoolObject {
    for (id obj in self) {
        if ([obj isKindOfClass:[NSArray class]]) {
            BOOL hasMatch = [obj hasBoolObject];
            if (hasMatch) {
                return YES;
            }
        }else {
            if ([obj boolValue]) {
                return YES;
            }
        }
    }
    
    return NO;
}
