
#pragma mark - MentionView

#define MentionViewTag 9999
#define kSuperView self.view

- (void)showMentionViewWithImgName:(NSString *)name text:(NSString *)text animated:(BOOL)animated {
    [self showMentionViewWithImgName:name text:text animated:animated superView:nil];
}

- (void)showMentionViewWithImgName:(NSString *)name text:(NSString *)text animated:(BOOL)animated superView:(UIView *)superView {
    if (!superView) superView = kSuperView;
    
    if (![superView viewWithTag:MentionViewTag]) {
        [self createMentionViewWithSuperView:superView];
    }
    
    [self showWithSuperView:superView imgName:name text:text animated:animated];
}

- (void)hiddenMentionView:(BOOL)hidden animated:(BOOL)animated {
    [self hiddenMentionView:hidden animated:animated superView:nil];
}

- (void)hiddenMentionView:(BOOL)hidden animated:(BOOL)animated superView:(UIView *)superView {
    if (!superView) superView = kSuperView;
    UIView *view = [superView viewWithTag:MentionViewTag];
    if (view) {
        [self hiddenView:view hidden:hidden animated:animated];
    }
}

- (UIView *)mentionViewWithImgName:( NSString * _Nonnull )name text:(NSString *)text frame:(CGRect)frame {
    UIView *view = [[UIView alloc] initWithFrame:frame];
    
    UIImageView *iv = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 100, 100)];
    iv.center = CGPointMake(view.center.x, view.frame.size.height/2);
    iv.contentMode = UIViewContentModeScaleAspectFit;
    iv.image = [UIImage imageNamed:name];
    [view addSubview:iv];
    
    CGFloat bottom = iv.frame.origin.y + iv.frame.size.height;
    UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(0, bottom+DefaultMargin, view.frame.size.width, 21)];
    label.textAlignment = NSTextAlignmentCenter;
    label.textColor = [UIColor lightGrayColor];
    label.text = text;
    [view addSubview:label];
    
    return view;
}

/**
 *  private method
 */
- (void)createMentionViewWithSuperView:(UIView *)superView {
    UIView *view = [self mentionViewWithImgName:nil text:nil frame:superView.bounds];
    view.tag = MentionViewTag;
    view.alpha = 0.0;
    view.hidden = YES;
    view.backgroundColor = [UIColor whiteColor];
    [superView addSubview:view];
}

- (void)showWithSuperView:(UIView *)superView imgName:(NSString *)name text:(NSString *)text animated:(BOOL)animated {
    UIView *view = [superView viewWithTag:MentionViewTag];
    
    for (UIView *v in view.subviews) {
        if ([v isMemberOfClass:[UIImageView class]]) {
            ((UIImageView *)v).image = [UIImage imageNamed:name];
            
            UIWindow *window = [UIApplication sharedApplication].keyWindow;
            BOOL b1 = self.edgesForExtendedLayout == UIRectEdgeAll || self.edgesForExtendedLayout == UIRectEdgeTop;
            BOOL b2 = [window isEqual:superView];
            if (!b1 && !b2) {
                v.center = CGPointMake(v.center.x, v.center.y-64);
            }
        }
        if ([v isMemberOfClass:[UILabel class]]) {
            ((UILabel *)v).text = text;
        }
    }
    if (view) {
        [self hiddenView:view hidden:NO animated:animated];
    }
}

- (void)hiddenView:(UIView *)view hidden:(BOOL)hidden animated:(BOOL)animated {
    if (hidden) {
        if (view.isHidden == NO) {
            if (animated) {
                [UIView animateWithDuration:DefaultAnimationDuration animations:^{
                    view.alpha = 0.0;
                } completion:^(BOOL finished) {
                    view.hidden = hidden;
                }];
            }else {
                view.alpha = 0.0;
                view.hidden = hidden;
            }
        }
    }else {
        if (view.isHidden) {
            view.hidden = hidden;
            if (animated) {
                [UIView animateWithDuration:DefaultAnimationDuration animations:^{
                    view.alpha = 1.0;
                }];
            }else {
                view.alpha = 1.0;
            }
        }
    }
}
